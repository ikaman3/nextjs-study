{
  "diarys": [
    {
      "title": "하이염",
      "body": "ㅇㅅㅇ\r\n\r\n녹두로",
      "id": 1
    },
    {
      "title": "메랜개꿀잼",
      "body": "오늘도 달린다 ㅋㅋ\r\n미츄었냐고~",
      "id": 2
    },
    {
      "title": "내인생망함",
      "body": "이유: 메랜을 시작함",
      "id": 3
    },
    {
      "title": "해치웠나????",
      "body": "젭발",
      "id": 5
    },
    {
      "title": "이전 페이지의 데이터가 잔존하는 문제",
      "body": "React는 동일한 URL로 전송한 fetch request를 memoization한다.\r\n근데 json-server는 마지막 id를 기준으로 1씩 증가하는 방식이다.\r\n데이터를 삭제했다가 다시 등록하면 기존의 데이터와 id 값이 겹치므로 동일한 URL로 요청을 보내게 되어 캐싱된 데이터를 보게된 것이다.",
      "id": 6
    },
    {
      "title": "의문점1",
      "body": "React의 request memoization이 문제라면 왜 /read 페이지는 최신데이터가 바로 반영되는가????",
      "id": 7
    },
    {
      "title": "의문점1 해결",
      "body": "createTopic, deleteTopic Server Action에서 revalidatePath('/read')으로 재검증하고 있으니까...",
      "id": 8
    },
    {
      "title": "캐싱 문제 최종 해결",
      "body": "db의 id 값을 랜덤한 문자열로 사용하지 않으면서\r\nrevalidatePath(`/read/${id}`)으로 getTopic Server Action에서 항상 재검증하도록 해줬다",
      "id": 9
    },
    {
      "title": "뜌땨땨 우땨야 뜌따따",
      "body": "뜌땨우땨땨",
      "id": 12
    },
    {
      "title": "눈이 아프다",
      "body": "눈아파",
      "id": 13
    },
    {
      "title": "진짜진짜되냐",
      "body": "진짜됨\r\n수정도됨\r\n\r\nㄴㅁㅇㄴㅁㄴㅇ\r\n\r\n\r\nㄴㅁㅇㄴㅁ",
      "id": 14
    },
    {
      "title": "근데 이제 뭐함?",
      "body": "소신발언~",
      "id": 15
    },
    {
      "title": "너무 피곤해",
      "body": "죽여줭",
      "id": 16
    },
    {
      "title": "아아아아아아",
      "body": "ㅐㅑㅗ랮도ㄴㅁㅇㅁㄴㅇㄴㅁㅇㄴㅁㅇㅁㄴㅇㅁㄴㅇㅁㅇㅓ랟잳재",
      "id": 17
    },
    {
      "title": "안아줘요",
      "body": "슬퍼요\r\n\r\n졸려요",
      "id": 20
    },
    {
      "title": "되는거에요?",
      "body": "'안돼'\r\n\r\n'이제 돼'",
      "id": 23
    }
  ],
  "users": [
    {
      "email": "abc@abc.com",
      "password": "qwer",
      "id": 1
    }
  ]
}